//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum BlueshiftAnchorEscrowError {
    /// 6000 - Invalid amount
    #[error("Invalid amount")]
    InvalidAmount = 0x1770,
    /// 6001 - Invalid maker
    #[error("Invalid maker")]
    InvalidMaker = 0x1771,
    /// 6002 - Invalid mint a
    #[error("Invalid mint a")]
    InvalidMintA = 0x1772,
    /// 6003 - Invalid mint b
    #[error("Invalid mint b")]
    InvalidMintB = 0x1773,
}

impl solana_program::program_error::PrintProgramError for BlueshiftAnchorEscrowError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

impl<T> solana_program::decode_error::DecodeError<T> for BlueshiftAnchorEscrowError {
    fn type_of() -> &'static str {
        "BlueshiftAnchorEscrowError"
    }
}

